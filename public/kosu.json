{
    "by": "freeCodeCamp.org",
    "by_url": "htps://youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ",
    "chapter_info": [
      {
        "chapter_name": "Intro",
        "end_time": "0:03:05",
        "start_time": "0:00:00"
      },
      {
        "chapter_name": "Introduction to getting and preparing text data",
        "end_time": "0:05:51",
        "start_time": "0:03:05"
      },
      {
        "chapter_name": "Starting a new PyCharm project",
        "end_time": "0:16:59",
        "start_time": "0:05:51"
      },
      {
        "chapter_name": "Patterns of missing data",
        "end_time": "0:25:21",
        "start_time": "0:16:59"
      },
      {
        "chapter_name": "Checking the number of categories",
        "end_time": "0:28:27",
        "start_time": "0:25:21"
      },
      {
        "chapter_name": "Remove short descriptions",
        "end_time": "0:34:36",
        "start_time": "0:28:27"
      },
      {
        "chapter_name": "Final cleaning steps",
        "end_time": "0:38:11",
        "start_time": "0:34:36"
      },
      {
        "chapter_name": "Introduction to LLMs and vector search",
        "end_time": "0:54:43",
        "start_time": "0:38:11"
      },
      {
        "chapter_name": "LangChain",
        "end_time": "0:58:46",
        "start_time": "0:54:43"
      },
      {
        "chapter_name": "Splitting the books using CharacterTextSplitter",
        "end_time": "1:02:57",
        "start_time": "0:58:46"
      },
      {
        "chapter_name": "Building the vector database",
        "end_time": "1:05:50",
        "start_time": "1:02:57"
      },
      {
        "chapter_name": "Getting book recommendations using vector search",
        "end_time": "1:11:07",
        "start_time": "1:05:50"
      },
      {
        "chapter_name": "Introduction to zero-shot text classification using LLMs",
        "end_time": "1:15:34",
        "start_time": "1:11:07"
      },
      {
        "chapter_name": "Finding LLMs for zero-shot classification on Hugging Face",
        "end_time": "1:22:21",
        "start_time": "1:15:34"
      },
      {
        "chapter_name": "Classifying book descriptions",
        "end_time": "1:26:24",
        "start_time": "1:22:21"
      },
      {
        "chapter_name": "Checking classifier accuracy",
        "end_time": "1:35:19",
        "start_time": "1:26:24"
      },
      {
        "chapter_name": "Introduction to using LLMs for sentiment analysis",
        "end_time": "1:39:25",
        "start_time": "1:35:19"
      },
      {
        "chapter_name": "Finding fine-tuned LLMs for sentiment analysis",
        "end_time": "1:42:07",
        "start_time": "1:39:25"
      },
      {
        "chapter_name": "Extracting emotions from book descriptions",
        "end_time": "1:54:25",
        "start_time": "1:42:07"
      },
      {
        "chapter_name": "Introduction to Gradio",
        "end_time": "1:56:51",
        "start_time": "1:54:25"
      },
      {
        "chapter_name": "Building a Gradio dashboard to recommend books",
        "end_time": "2:12:49",
        "start_time": "1:56:51"
      },
      {
        "chapter_name": "Outro",
        "end_time": "2$15$4$",
        "start_time": "2:12:49"
      }
    ],
    "description": "Discover how to build an intelligent book recommendation system using the power of large language models and Python. Learn to transform book descriptions into mathematical representations that enable precise content-based matching. By the end of this course, you'll have built a recommendation engine that helps readers discover their next favorite book.\n\n\ud83d\udcbb Code from this tutorial: https://github.com/t-redactyl/llm-semantic-book-recommender/tree/main\n\n\ud83c\udfd7\ufe0f JetBrains provided a grant to make this course possible.\n\n\u2b50\ufe0f Resources \u2b50\ufe0f\nFree 3-Month PyCharm Professional Subscription \nCode: PyCharm4FreeCodeCamp\nDownload PyCharm: https://jb.gg/pycharm-fcc \nRedeem PyCharm 3-month free license: jetbrains.com/store/redeem\n\nDownload PyCharm: https://jb.gg/pycharm-fcc\nKaggle datasets: https://kaggle.com/datasets\n7K books dataset by Dylan Castillo: https://kaggle.com/datasets/dylanjcastillo/7k-books-with-metadata\nHugging Face free NLP course: https://huggingface.co/learn/nlp-course/en/\nExplanation of transformer encoder-decoder models (from Hugging Face NLP course): https://huggingface.co/learn/nlp-course/en/chapter1/7\nExplanation of transformer decoder-only models (from Hugging Face NLP course): https://huggingface.co/learn/nlp-course/en/chapter1/6\nExplanation of transformer encoder-only models (from Hugging Face NLP course): https://huggingface.co/learn/nlp-course/en/chapter1/5\nHugging Face Hub models page: https://huggingface.co/models\nOpenAI models: https://platform.openai.com/docs/models\nExplanation of vector index (from Weaviate): https://weaviate.io/developers/weaviate/concepts/vector-index\nLangChain Python docs: https://python.langchain.com/docs/introduction\nLangChain chat model integrations: https://python.langchain.com/docs/integrations/chat\nOpenAI billing page: https://platform.openai.com/settings/organization/billing/overview\nOpenAI API keys page: https://platform.openai.com/settings/organization/api-keys\nExplanation of zero-shot classification (from Hugging Face): https://huggingface.co/tasks/zero-shot-classification\nInformation about fine-tuned emotion classification model: https://dataloop.ai/library/model/j-hartmann_emotion-english-distilroberta-base\nGetting started with Gradio: https://gradio.app/guides/quickstart\nGradio playground: https://gradio.app/playground\nGradio themes: https://gradio.app/guides/theming-guide\nFurther work by Jodie about LLMs\nTalk from GOTO Amsterdam giving an overview of LLMs: https://youtube.com/watch?v=Pv0cfsastFs\nTalk from NDC Oslo about whether LLMs are showing signs of humanity: https://youtube.com/watch?v=kqJ7rZHFx84\nTalk from PyCon US about hallucinations in LLMs: https://youtube.com/watch?v=innz9iBIAdU\nTutorial on doing sentiment analysis with LLMs: https://blog.jetbrains.com/pycharm/2024/12/how-to-do-sentiment-analysis-with-large-language-models/\nArticle on LLM\u2019s understanding of language: https://t-redactyl.io/blog/2024/06/can-llms-use-language-at-a-human-like-level.html\nArticle on sentience in LLMs: https://t-redactyl.io/blog/2024/07/could-llms-be-sentient.html\nArticle on intelligence in LLMs: https://t-redactyl.io/blog/2024/07/are-llms-on-the-path-to-agi.html\n12:25\n\n\u2764\ufe0f Support for this channel comes from our friends at Scrimba \u2013 the coding platform that's reinvented interactive learning: https://scrimba.com/freecodecamp\n\n\u2b50\ufe0f Chapters \u2b50\ufe0f\n0:00:00 Intro\n0:03:05 Introduction to getting and preparing text data\n0:05:51 Starting a new PyCharm project\n0:16:59 Patterns of missing data\n0:25:21 Checking the number of categories\n0:28:27 Remove short descriptions\n0:34:36 Final cleaning steps\n0:38:11 Introduction to LLMs and vector search\n0:54:43 LangChain\n0:58:46 Splitting the books using CharacterTextSplitter\n1:02:57 Building the vector database\n1:05:50 Getting book recommendations using vector search\n1:11:07 Introduction to zero-shot text classification using LLMs\n1:15:34 Finding LLMs for zero-shot classification on Hugging Face\n1:22:21 Classifying book descriptions\n1:26:24 Checking classifier accuracy\n1:35:19 Introduction to using LLMs for sentiment analysis\n1:39:25 Finding fine-tuned LLMs for sentiment analysis\n1:42:07 Extracting emotions from book descriptions\n1:54:25 Introduction to Gradio\n1:56:51 Building a Gradio dashboard to recommend books\n2:12:49 Outro",
    "duration": "2$15$4$",
    "summarized_description": "Learn how to build an intelligent book recommendation system using Python and large language models. Transform book descriptions into mathematical representations for content-based matching, enabling readers to discover new favorites. This course covers data preparation, vector search, zero-shot classification, sentiment analysis, and building a Gradio dashboard.\n",
    "thumbnail_url": "https://i.ytimg.com/vi/Q7mS1VHm3Yw/hqdefault.jpg",
    "title": "LLM Course \u2013 Build a Semantic Book Recommender (Python, OpenAI, LangChain, Gradio)",
    "url": "https://youtube.com/watch?v=Q7mS1VHm3Yw",
    "kosu_started":"2025-01-31-17:43:22"

}